/* eslint-disable no-param-reassign, array-callback-return */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { Extension } from 'magic-sdk';
import { SolanaPayloadMethod } from './type';
var SolanaExtension = /** @class */ (function (_super) {
    __extends(SolanaExtension, _super);
    function SolanaExtension(solanaConfig) {
        var _this = _super.call(this) || this;
        _this.solanaConfig = solanaConfig;
        _this.name = 'solana';
        _this.config = {};
        _this.sendAndConfirmTransaction = function (transaction, options) {
            var instructions = transaction.instructions;
            instructions.map(function (instruction) {
                instruction.programId = instruction.programId.toBase58();
            });
            return _this.request({
                id: 42,
                jsonrpc: '2.0',
                method: SolanaPayloadMethod.SendTransaction,
                params: {
                    instructions: instructions,
                    options: options,
                },
            });
        };
        _this.signTransaction = function (transaction) {
            var instructions = transaction.instructions;
            instructions.map(function (instruction) {
                instruction.programId = instruction.programId.toBase58();
            });
            return _this.request({
                id: 42,
                jsonrpc: '2.0',
                method: SolanaPayloadMethod.SignTransaction,
                params: {
                    instructions: instructions,
                    recentBlockhash: transaction.recentBlockhash,
                },
            });
        };
        _this.config = {
            rpcUrl: solanaConfig.rpcUrl,
            chainType: 'SOLANA',
        };
        return _this;
    }
    return SolanaExtension;
}(Extension.Internal));
export { SolanaExtension };
//# sourceMappingURL=index.js.map