"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.readableStreamHasher = void 0;
const fsCreateReadStream_1 = require("./fsCreateReadStream");
const HashCalculator_1 = require("./HashCalculator");
const isFileStream_1 = require("./isFileStream");
const readableStreamHasher = (hashCtor, readableStream) => {
    if (!isFileStream_1.isFileStream(readableStream) && readableStream.readableFlowing !== null) {
        throw new Error("Unable to calculate hash for flowing readable stream");
    }
    const streamToPipe = isFileStream_1.isFileStream(readableStream) ? fsCreateReadStream_1.fsCreateReadStream(readableStream) : readableStream;
    const hash = new hashCtor();
    const hashCalculator = new HashCalculator_1.HashCalculator(hash);
    streamToPipe.pipe(hashCalculator);
    return new Promise((resolve, reject) => {
        streamToPipe.on("error", (err) => {
            hashCalculator.end();
            reject(err);
        });
        hashCalculator.on("error", reject);
        hashCalculator.on("finish", () => {
            hash.digest().then(resolve).catch(reject);
        });
    });
};
exports.readableStreamHasher = readableStreamHasher;
